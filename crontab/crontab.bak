# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').
# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command
* * * * * ~/scripts/housekeeping.sh cron
#0 20 * * * bash ~/scripts/housekeeping.sh && echo "$(date '+%F %T')" >> ~/scripts/housekeeping.log
* * * * * ~/scripts/backup.sh cron
#0 20 * * * bash /root/scripts/backup.sh && echo "$(date '+%F %T')" >> ~/scripts/backup.log
#35 20 * * * . /root/scripts/stack-1-update.sh && echo "$(date '+%F %T')" >> ~/scripts/stack-1-update.log
#0 21 * * * . /root/scripts/stack-1-update.sh && echo "$(date '+%F %T')" >> ~/scripts/stack-1-update.log
#* * * * * echo date '+%F %T' >> /root/scripts/crontab.log
#* * * * * echo $(date '+%F %T') >> /root/scripts/crontab.log
#* * * * * echo "$(date '+%F %T')" >> /root/scripts/crontab.log
#* * * * * echo "gnagarsvin!" >> /root/scripts/crontab.log
#* * * * * echo date '+%F %T' >> /root/scripts/crontab.log
#* * * * * echo $(date '+%F %T') >> /root/scripts/crontab.log
#* * * * * bash date '+%F %T' >> /root/scripts/crontab.log
